#cloud-config

# Cloud init template that installs Docker and Docker Compose
# - including DNS so the VM is reachable under the <instance-name>.local
#
# Example:
# $ multipass lounch --name <instance-name> \
#   --cpus <Number of CPUs to allocate> \
#   --disk <Disk space to allocate>G \
#   --mem <Amount of memory to allocate>G \
#   --cloud-init cloud-init-docker-docker-compose.yaml
#
# Example using defaults:
# $ $ multipass lounch --name fakedocker --disk 20G --cloud-init cloud-init-docker-docker-compose.yaml
#
# Will launch an image with 1 CPU and 1 GB of memory using 20GB og disk space.
#
# An ssh key can be provide so you can point DOCKER_HOST on your local machine to control the daemon in the instance.
# $ export DOCKER_HOST="tcp://ubuntu@fakedocker.local:2375"

# auto update packages
package_update: true

# enable Bonjour so you can access remote by <instance>.local (avahi libnss)
# see https://www.cnbeining.com/2021/09/using-docker-and-docker-compose-on-macos-with-multipass/
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - software-properties-common
  - avahi-daemon
  - libnss-mdns

# create the docker group
groups:
  - docker

# Add default auto created user to docker group
system_info:
  default_user:
    groups: [docker]
users:
  - name: ubuntu
    ssh-authorized-keys:
      - ssh-rsa <place your own public ssh key>

runcmd:
  ################################################################################
  ## install docker
  ################################################################################
  # install docker following the guide: https://docs.docker.com/install/linux/docker-ce/ubuntu/
  # remove old versions
  - sudo apt-get -y remove docker docker-engine docker.io containerd runc
  # install gpg key
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  # setup stable repository
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  # install docker engine
  - sudo apt-get -y update
  - sudo apt-get -y install docker-ce docker-ce-cli containerd.io

  ################################################################################
  ## install docker-compose
  ################################################################################
  # install docker-compose following the guide: https://docs.docker.com/compose/install/
  - sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - sudo systemctl daemon-reload

  # upgrade all available
  - sudo apt-get -y upgrade

write_files:
  - content: |
      [Service]
      Type=notify
      # the default is not to use systemd for cgroups because the delegate issues still
      # exists and systemd currently does not support the cgroup feature set required
      # for containers run by docker
      ExecStart=
      ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H unix:///var/run/docker.sock -H tcp://0.0.0.0:
      ExecReload=/bin/kill -s HUP $MAINPID
      TimeoutSec=0
      RestartSec=2
      Restart=always
    path: /lib/systemd/system/docker.service.d/overwrite.conf
    owner: root:root
    permissions: '0644'

power_state:
  mode: reboot
  message: Restarting after configuring Ubuntu for Docker and Docker-Compose
